% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ZIPPCAlnm.R
\name{ZIPPCAlnm}
\alias{ZIPPCAlnm}
\title{ZIPPCAlnm}
\usage{
ZIPPCAlnm(
  X,
  V = NULL,
  n.factors = 2,
  rank = FALSE,
  trace = FALSE,
  maxit = 100,
  parallel = TRUE
)
}
\arguments{
\item{X}{matrix of observations.}

\item{V}{vector of the sample covariate.}

\item{n.factors}{the rank or number of factors, after dimensional reduction. Defaults to 2.}

\item{rank}{logical, if TRUE, the rank or number of factors, is chosen from 1 to 5 by BIC (Bayesian information criterion). Defaults to FALSE.}

\item{trace}{logical, defaults to \code{FALSE}. if \code{TRUE} each current iteration step information will be printed.}

\item{maxit}{maximum number of iterations within \code{optim} and \code{constrOptim} function, defaults to 100.}

\item{parallel}{logical, if TRUE, use parallel toolbox to accelerate.}
}
\value{
\item{VLB }{ variational lower bound of log likelihood}
 \item{lvs}{list of latent variables
 \itemize{
   \item{pi }{ the probabilities of excess zeros}
   \item{factor_scores }{ coordinates or factor scores in low-dimensional subspace}
   \item{factor_scores2 }{ coordinates or factor scores in low-dimensional subspace with defalt rank 2, which is suitable for visualization.}
   }}
 \item{params}{list of model parameters
 \itemize{
   \item{factor_coefs_j }{ coefficients of latent variables fator scores or factor loadings}
   \item{factor_coefs_0 }{ taxon-specific intercepts}
   \item{gamma }{ coeffcients of sample covariate}
   \item{tuo }{ taxon-specific parameter of zero-inflation probability}
   \item{c }{ sample-specific parameter of zero-inflation probability}
   }}
 \item{Q }{ the underlying composition of microbiome data}
 \item{muz }{ the denoised counts of microbiome data}
 \item{bic}{ the number of the rank selection, chosen by BIC type information criterion}
}
\description{
Microbiome data denoising framework (mbDenoise) with zero-inflated probabilistic PCA with logistical normal multinomial model (ZIPPCA-LNM),
             which can be used for downstream statistical analysis including ordination, compositional
             normalization, differential abundance analysis, etc.
}
\examples{
n.n = 60
n.w = 100
n.factors = 2
set.seed(1)
si <- diag(n.factors)
me <- c(0,0)
f <- matrix(0,nrow = n.n, ncol = n.factors)
for(i in 1:n.n){
 f[i,] <- rnorm(n.factors, mean = 0, sd = 1)
}
betaj <- matrix(0,nrow = n.w, ncol = n.factors)
for(j in 1:n.w){
  betaj[j,] <- runif(n.factors,-1,1)
}
alpha <- rep(0,n.n)
beta0 <- rep(0,n.w)
g <- rep(0,n.w*0.5*0.5)
gamma <- c(g,-g,rep(0,(n.w-n.w*0.5)))
X_cov<- c(rep(1,n.n/2),rep(0,n.n/2))
ll <- f \%*\% t(betaj) +matrix(alpha,n.n,n.w)+matrix(beta0,n.n,n.w,byrow=TRUE)
exp_mat <- exp(ll)
eta_mat <- matrix(0.25,n.n,n.w,byrow=TRUE)
z <- matrix(0,n.n,n.w,byrow = TRUE)
for(i in 1:n.n){
  z[i,] <- rbinom(n.w, size=1, prob=eta_mat[i,])
}
sum <- rowSums((1-z)*exp_mat)
Qn_z <- (1-z)*exp_mat/sum
sum <- rowSums(exp_mat)
Qn <- exp_mat/sum
X <- matrix(0,n.n,n.w,byrow = TRUE)
for(i in 1:n.n){
X[i,] <- rmultinom(1, size = runif(1,80,800), prob = Qn[i,])
}
X[z==1]=0
zerorow <- which(rowSums(X)==0)
if(length(zerorow) >0 ){
   X <- X[-zerorow,];X_cov<-X_cov[-zerorow];f <- f[-zerorow,];
   Qn <- Qn[-zerorow,];Qn_z <- Qn_z[-zerorow,];
}
zerocol <- which(colSums(X)==0)
if(length(zerocol) >0 ){
  X <- X[,-zerocol];betaj <- t(t(betaj)[,-zerocol]);
  Qn <- Qn[,-zerocol];Qn_z <- Qn_z[,-zerocol];
}
re_zilnm_cov <- ZIPPCAlnm(X,X_cov)
re_zilnm <- ZIPPCAlnm(X)

}
