{
    "collab_server" : "",
    "contents" : "% Generated by roxygen2: do not edit by hand\n% Please edit documentation in R/ZIPPCA.R\n\\name{ZIPPCApn}\n\\alias{ZIPPCApn}\n\\title{ZIPPCA}\n\\usage{\nZIPPCApn(X, V=NULL, family = \"negative.binomial\", n.factors=2, rank=FALSE,\n                     trace = FALSE, maxit = 100, parallel=TRUE)\n}\n\\arguments{\n\\item{X}{matrix of observations.}\n\n\\item{V}{vector of the sample covariate.}\n\n\\item{family}{distribution of models. Two options are \"poisson\" and \"negative.binomial\". Defaults to \"negative.binomial\".}\n\n\\item{n.factors}{the rank or number of factors, after dimensional reduction. Defaults to 2.}\n\n\\item{rank}{logical, if TRUE, the rank or number of factors, is chosen from 1 to 5 by HIC (hybrid information criterion). Defaults to FALSE.}\n\n\\item{trace}{logical, defaults to \\code{FALSE}. if \\code{TRUE} each current iteration step information will be printed.}\n\n\\item{maxit}{maximum number of iterations within \\code{optim} and \\code{constrOptim} function, defaults to 100.}\n\n\\item{parallel}{logical, if TRUE, use parallel toolbox to accelerate.}\n}\n\n\\value{\n\\item{VLB }{ variational lower bound of log likelihood}\n \\item{lvs}{list of latent variables\n \\itemize{\n   \\item{pi }{ the probabilities of excess zeros}\n   \\item{factor_scores }{ coordinates or factor scores in low-dimensional subspace}\n   }}\n \\item{params}{list of model parameters\n \\itemize{\n   \\item{factor_coefs_j }{ coefficients of latent variables fator scores or factor loadings}\n   \\item{factor_coefs_0 }{ taxon-specific intercepts}\n   \\item{alpha }{ sample-specifc intercepts that adjusts for the sequencing depth}\n   \\item{gamma }{ coeffcients of sample covariate}\n   \\item{dispersion }{ taxon-specific over-dispersion parameter for negative binomial distribution}\n   }}\n \\item{hic }{ the number of the rank selection, chosen by HIC type information criterion}\n}\n\\description{\nZero-Inflated Probabilistic PCA (ZIPPCA), for dimension reduction and data ordination of multivariate abundance data, and propose an efficient variational approximation method for estimation, inference, and prediction.\n}\n\\examples{\n n.n = 100\n n.m = 50\n n.factors = 2\n set.seed(37)\n f <- matrix(0,nrow = n.n, ncol = n.factors)\n for(i in 1:n.n){\n   f[i,] <- rnorm(n.factors, mean = 0, sd = 1)\n }\n betaj <- matrix(0,nrow = n.m, ncol = n.factors)\n for(j in 1:n.m){\n   betaj[j,] <- rnorm(n.factors, mean =0, sd = 1)\n }\n beta0 <- rep(1,n.m)\n alpha <- rep(0,n.n)\n l <- matrix(alpha,n.n,n.m) +matrix(beta0,n.n,n.m,byrow=TRUE) + f \\%*\\% t(betaj)\n lambda <- exp(l)\n eta_j <- runif(n.m, 0,1)\n z <- matrix(0,n.n,n.m)\n for(i in 1:n.n){\n   z[i,] <- rbinom(n.m, size=1, prob=eta_j)\n }\n X <- matrix(0,n.n,n.m,byrow = TRUE)\n for(i in 1:n.n){\n   for(j in 1:n.m){\n     X[i,j] <- rnbinom(n=1,size=10,mu=lambda[i,j])\n   }\n }\n X[z==1]=0\n zerorow <- which(rowSums(X)==0)\n if(length(zerorow) >0 ){\n   X <- X[-zerorow,];f <- f[-zerorow,]\n }\n zerocol <- which(colSums(X)==0)\n if(length(zerocol) >0 ){\n   X <- X[,-zerocol];betaj <- t(t(betaj)[,-zerocol])\n }\n result <- ZIPPCA::ZIPPCApn(X)\n f_coordinates <- result$lvs$factor_scores\n}\n",
    "created" : 1624807726968.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1905626925",
    "id" : "966F5A42",
    "lastKnownWriteTime" : 1615041500,
    "last_content_update" : 1615041500,
    "path" : "~/云盘/ZIPPCA/man/ZIPPCApn.Rd",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_doc"
}